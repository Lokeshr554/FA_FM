/*
 * Licensed Materials - Property of IBM
 *
 * Copyright IBM Corporation 2011, 2015. All Rights Reserved.
 *
 * U.S. Government Users Restricted Rights - Use, duplication or
 * disclosure restricted by GSA DP Schedule Contract with IBM Corp.
 */
package dojo.widgets;

import egl.ui.rui.Widget;

/*
 * An input text field for entering times. 
 *
 * For more detail, see http://docs.dojocampus.org/dijit/form/TimeTextBox
 */
ExternalType DojoTimeTextBox Extends DojoValidationBase type JavaScriptObject{
		relativePath = "dojo/widgets",
        javaScriptName = "DojoTimeTextBox",
        @VEWidget{
			category = "Display and Input",
			template = "${typeName}{ " ::
				"value = DateTimeLib.currentTime(), " ::
				"timePattern = ${typeName:dojo.widgets.DojoLib}.TIMEBOX_FORMAT_12HR, " ::
				"clickableIncrement = dojo.widgets.DojoLib.TIMEBOX_ONE_QUARTER, " ::			
				"visibleIncrement = ${typeName:dojo.widgets.DojoLib}.TIMEBOX_ONE_HOUR, " ::
				"visibleRange = ${typeName:dojo.widgets.DojoLib}.TIMEBOX_THREE_HOURS }",
			displayName = "TimeTextBox",
			smallIcon = "icons/ctool16/dijit_timetextbx_pal16.gif",
			largeIcon = "icons/ctool24/dijit_timetextbx_pal24.gif",
			propertyFilterType  = RUILib.INCLUDE_ALL_EXCEPT,
			propertyFilter = [ "class", "color", "x", "y", "cursor", "ariaLive", "ariaRole", "tabIndex" ],
			eventFilterType  = RUILib.INCLUDE_ALL_EXCEPT,
       		eventFilter  = ["onSelect","onScroll"],
			provider = "Dojo"
		},
		@MVCView{
			retrieveViewHelper = getValueAsText,
			publishHelper = setValueAsText,
			retrieveValidStateHelper = getValidState,
			publishMessageHelper = showErrorMessage,
			showErrorState = showErrorIndicator
		},
		@VEDataTemplate{
			dataTemplates = [
				@DataTemplate{
					name = "DojoTimeTextBox (read only)",
					dataMapping = @DataMapping {
						forArray = false,
						isDefault = true,
						mappings = [MappingKind.TYPE_PRIMITIVE_TIME, 
									MappingKind.TYPE_PRIMITIVE_TIMESTAMP]
					},
					purposes = [PurposeKind.FOR_DISPLAY, PurposeKind.FOR_UPDATE],
					template = "${widgetName} ${typeName:dojo.widgets.DojoTimeTextBox} { readonly = true, value = ${bindingName}, timePattern = ${typeName:dojo.widgets.DojoLib}.TIMEBOX_FORMAT_12HR, visibleIncrement = ${typeName:dojo.widgets.DojoLib}.TIMEBOX_ONE_HOUR, visibleRange = ${typeName:dojo.widgets.DojoLib}.TIMEBOX_THREE_HOURS };"
				},
				@DataTemplate{
					name = "DojoTimeTextBox",
					dataMapping = @DataMapping {
						forArray = false,
						isDefault = true,
						mappings = [MappingKind.TYPE_PRIMITIVE_TIME, 
									MappingKind.TYPE_PRIMITIVE_TIMESTAMP]
					},
					purposes = [PurposeKind.FOR_CREATE, PurposeKind.FOR_UPDATE],
					template = "${widgetName} ${typeName:dojo.widgets.DojoTimeTextBox} { value = ${bindingName}, timePattern = ${typeName:dojo.widgets.DojoLib}.TIMEBOX_FORMAT_12HR, visibleIncrement = ${typeName:dojo.widgets.DojoLib}.TIMEBOX_ONE_HOUR, visibleRange = ${typeName:dojo.widgets.DojoLib}.TIMEBOX_THREE_HOURS };"
				}
			]
		}          			
}
	/*
	 * The value of the currently selected time
	 */
	value Time? { @JavaScriptProperty } ;

	/*
	 * The time pattern for showing the time to be selected
	 */
	timePattern String{ @JavaScriptProperty, @VEProperty{ propertyType = "choice",
		choices = [
			@VEPropertyChoice {displayName = "12 hour", id = "${typeName:dojo.widgets.DojoLib}.TIMEBOX_FORMAT_12HR"},		
			@VEPropertyChoice {displayName = "24 hour", id = "${typeName:dojo.widgets.DojoLib}.TIMEBOX_FORMAT_24HR"}
		]
	} } ;
	
	/*
	 * The increment between times that can be clicked
	 */
	clickableIncrement String{ @JavaScriptProperty, @VEProperty{ propertyType = "choice",
		choices = [
			@VEPropertyChoice {displayName = "5 minutes", id = "dojo.widgets.DojoLib.TIMEBOX_FIVE_MINUTES"},		
			@VEPropertyChoice {displayName = "15 minutes", id = "dojo.widgets.DojoLib.TIMEBOX_ONE_QUARTER"},
			@VEPropertyChoice {displayName = "30 minutes", id = "dojo.widgets.DojoLib.TIMEBOX_HALF_HOUR"},
			@VEPropertyChoice {displayName = "1 hour", id = "dojo.widgets.DojoLib.TIMEBOX_ONE_HOUR"},
			@VEPropertyChoice {displayName = "2 hours", id = "dojo.widgets.DojoLib.TIMEBOX_TWO_HOUR"},
			@VEPropertyChoice {displayName = "3 hours", id = "dojo.widgets.DojoLib.TIMEBOX_THREE_HOURS"},
			@VEPropertyChoice {displayName = "5 hours", id = "dojo.widgets.DojoLib.TIMEBOX_FIVE_HOURS"},
			@VEPropertyChoice {displayName = "10 hours", id = "dojo.widgets.DojoLib.TIMEBOX_TEN_HOURS"},
			@VEPropertyChoice {displayName = "12 hours", id = "dojo.widgets.DojoLib.TIMEBOX_TWELVE_HOURS"},
			@VEPropertyChoice {displayName = "24 hours", id = "dojo.widgets.DojoLib.TIMEBOX_FULL_DAY"}
		]
	} } ;
	
	/*
	 * The increment between the times that are visible
	 */ 
	visibleIncrement String{ @JavaScriptProperty, @VEProperty{ propertyType = "choice",
		choices = [
			@VEPropertyChoice {displayName = "5 minutes", id = "${typeName:dojo.widgets.DojoLib}.TIMEBOX_FIVE_MINUTES"},		
			@VEPropertyChoice {displayName = "15 minutes", id = "${typeName:dojo.widgets.DojoLib}.TIMEBOX_ONE_QUARTER"},
			@VEPropertyChoice {displayName = "30 minutes", id = "${typeName:dojo.widgets.DojoLib}.TIMEBOX_HALF_HOUR"},
			@VEPropertyChoice {displayName = "1 hour", id = "${typeName:dojo.widgets.DojoLib}.TIMEBOX_ONE_HOUR"},
			@VEPropertyChoice {displayName = "2 hours", id = "${typeName:dojo.widgets.DojoLib}.TIMEBOX_TWO_HOUR"},
			@VEPropertyChoice {displayName = "3 hours", id = "${typeName:dojo.widgets.DojoLib}.TIMEBOX_THREE_HOURS"},
			@VEPropertyChoice {displayName = "5 hours", id = "${typeName:dojo.widgets.DojoLib}.TIMEBOX_FIVE_HOURS"},
			@VEPropertyChoice {displayName = "10 hours", id = "${typeName:dojo.widgets.DojoLib}.TIMEBOX_TEN_HOURS"},
			@VEPropertyChoice {displayName = "12 hours", id = "${typeName:dojo.widgets.DojoLib}.TIMEBOX_TWELVE_HOURS"},
			@VEPropertyChoice {displayName = "24 hours", id = "${typeName:dojo.widgets.DojoLib}.TIMEBOX_FULL_DAY"}
		]
	}} ;

	/*
	 * The range of times to be shown
	 */
	visibleRange String{ @JavaScriptProperty, @VEProperty{ propertyType = "choice",
		choices = [
			@VEPropertyChoice {displayName = "5 minutes", id = "${typeName:dojo.widgets.DojoLib}.TIMEBOX_FIVE_MINUTES"},		
			@VEPropertyChoice {displayName = "15 minutes", id = "${typeName:dojo.widgets.DojoLib}.TIMEBOX_ONE_QUARTER"},
			@VEPropertyChoice {displayName = "30 minutes", id = "${typeName:dojo.widgets.DojoLib}.TIMEBOX_HALF_HOUR"},
			@VEPropertyChoice {displayName = "1 hour", id = "${typeName:dojo.widgets.DojoLib}.TIMEBOX_ONE_HOUR"},
			@VEPropertyChoice {displayName = "2 hours", id = "${typeName:dojo.widgets.DojoLib}.TIMEBOX_TWO_HOUR"},
			@VEPropertyChoice {displayName = "3 hours", id = "${typeName:dojo.widgets.DojoLib}.TIMEBOX_THREE_HOURS"},
			@VEPropertyChoice {displayName = "5 hours", id = "${typeName:dojo.widgets.DojoLib}.TIMEBOX_FIVE_HOURS"},
			@VEPropertyChoice {displayName = "10 hours", id = "${typeName:dojo.widgets.DojoLib}.TIMEBOX_TEN_HOURS"},
			@VEPropertyChoice {displayName = "12 hours", id = "${typeName:dojo.widgets.DojoLib}.TIMEBOX_TWELVE_HOURS"},
			@VEPropertyChoice {displayName = "24 hours", id = "${typeName:dojo.widgets.DojoLib}.TIMEBOX_FULL_DAY"}
		]
	} } ;
	errorMessage string { @JavaScriptProperty, @VEProperty };
	
	private function getValueAsText() returns(String);
	private function setValueAsText(str String in);
	function getValidState() returns (string?);
	function showErrorMessage(msg string in);
	function showErrorIndicator(aboolean boolean in);
end
