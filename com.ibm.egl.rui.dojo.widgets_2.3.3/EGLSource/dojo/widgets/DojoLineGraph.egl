/*
 * Licensed Materials - Property of IBM
 *
 * Copyright IBM Corporation 2011, 2015. All Rights Reserved.
 *
 * U.S. Government Users Restricted Rights - Use, duplication or
 * disclosure restricted by GSA DP Schedule Contract with IBM Corp.
 */
package dojo.widgets;

import egl.ui.rui.Widget;

/*
 * This widget shows an array of numbers as a line graph. 
 * This widget implements the attributes offered by DojoChartBase (i.e., minx, miny, maxx, and maxy)
 *
 * For more information on Dojo charts, see http://docs.dojocampus.org/dojox/charting 
 */ 
ExternalType DojoLineGraph Extends DojoChartBase type JavaScriptObject{
		relativePath = "dojo/widgets",
		javaScriptName = "DojoLineGraph",
		@VEWidget{
			category = "Visualization",
			template = "${typeName}{\n" +
						"\t\tthemeColor = ${typeName:dojo.widgets.DojoLib}.CHART_COLOR_THEME_ORANGE, \n" +
						"\t\ttension=3, showShadows=true, minY=\"2.0\", maxY=\"10\", showMarkers=true,\n" +
						"\t\tdata=[ \n"+
						"\t\t\tnew ${typeName:dojo.widgets.LineGraphData}{ value=3.0 },\n" +
						"\t\t\tnew ${typeName:dojo.widgets.LineGraphData}{ value=4.5 },\n" +
						"\t\t\tnew ${typeName:dojo.widgets.LineGraphData}{ value=6.0 },\n" +
						"\t\t\tnew ${typeName:dojo.widgets.LineGraphData}{ value=8.5 }\n" +
						"\t]}",
			displayName = "LineGraph",
			smallIcon = "icons/ctool16/line_graph_pal16.gif",
			largeIcon = "icons/ctool24/line_graph_pal24.gif",
			propertyFilterType  = RUILib.INCLUDE_ALL_EXCEPT,
			propertyFilter = [ "color", "backgroundColor", "font", "fontSize", "fontWeight", "x", "y", "opacity", "disabled", "ariaLive", "ariaRole", "tabIndex"],
			eventFilterType  = RUILib.INCLUDE_ALL_EXCEPT,
       		eventFilter  = ["onChange", "onSelect", "onFocusGained", "onFocusLost", "onKeyDown", "onKeyPress", "onKeyUp", "onScroll"],
			provider = "Dojo"
		}   
	}
	
	/*
	 * Provide the theme color to use for drawing the chart. Has to one of the available Dojo charting color themes.
	 * As of Dojo 1.3.1, the choices are:
	 * 
	 *	DojoLib.CHART_COLOR_THEME_RED		String	= "red";
	 *	DojoLib.CHART_COLOR_THEME_BLUE		String	= "blue";
	 *	DojoLib.CHART_COLOR_THEME_GREEN		String	= "green";
	 *	DojoLib.CHART_COLOR_THEME_ORANGE	String	= "orange";
	 *	DojoLib.CHART_COLOR_THEME_CYAN		String	= "cyan";
	 *	DojoLib.CHART_COLOR_THEME_PURPLE	String	= "purple";
	 *
	 * Check out http://archive.dojotoolkit.org/nightly/dojotoolkit/dojox/charting/themes/PlotKit/ for the latest color themes.
	 */ 
	themeColor String { @VEProperty {
		propertyType = "choice",
		choices = [
			@VEPropertyChoice {displayName = "red", id = "${typeName:dojo.widgets.DojoLib}.CHART_COLOR_THEME_RED"},
			@VEPropertyChoice {displayName = "blue", id = "${typeName:dojo.widgets.DojoLib}.CHART_COLOR_THEME_BLUE"},
			@VEPropertyChoice {displayName = "green", id = "${typeName:dojo.widgets.DojoLib}.CHART_COLOR_THEME_GREEN"},
			@VEPropertyChoice {displayName = "orange", id = "${typeName:dojo.widgets.DojoLib}.CHART_COLOR_THEME_ORANGE"},
			@VEPropertyChoice {displayName = "cyan", id = "${typeName:dojo.widgets.DojoLib}.CHART_COLOR_THEME_CYAN"},
			@VEPropertyChoice {displayName = "purple", id = "${typeName:dojo.widgets.DojoLib}.CHART_COLOR_THEME_PURPLE"}
		]
	}};
	
	/*
	 * The values to display in this chart
	 */
	data LineGraphData[] { @JavaScriptProperty{ setMethod = "setData" , getMethod = "getData" } };
	
	/*
	 * Draw little circles for each of the data points
	 */
	showMarkers Boolean {@VEProperty};
	
	/*
	 * Show shadows behind the lines to make them look more 3D
	 */
	showShadows Boolean {@VEProperty};
	
	/*
	 * By default this option is set to 0, which means straight lines are drawn between 2 points. 
	 * A tension in the range from 2 to 4 should be a good range for natural looking curves. 
	 * For some crazy effects try setting the tension to values 0 or negative.
	 */
	tension int {@VEProperty};	// set the curvature of the graph
	
	/** the minimum value for the x (horizontal) axis */
	minX float { @VEProperty{} };
	
	/** the maximum value for the x (horizontal) axis */
	maxX float { @VEProperty{} };
	
	/** the minimum value for the y (vertical) axis */
	minY float { @VEProperty{} };
	
	/** the maximum value for the y (vertical) axis */
	maxY float { @VEProperty{} };
	
end
/*
 * One data point to add to a line chart
 */
Record LineGraphData

    value float;

end
